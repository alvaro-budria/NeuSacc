general {
    base_exp_dir = ./exp/dtu_scan106/wmask_sphere

    recording = [
        ./,
        ./models
    ]

    recording = [
        ./,
        ./models
    ]

    training = true,
    use_profiler = false
}

dataset {
    data_dir = ./public_data/dtu_scan106/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
}

train {
    learning_rate = 5e-3
    learning_rate_alpha = 0.05
    learning_rate_variance = 1e-4
    learning_rate_geometry = 5e-3
    learning_rate_texture = 5e-3

    beta1 = 0.9
    beta2 = 0.99
    eps = 1e-15
    end_iter = 100000
    weight_decay = 1e-5

    scheduler_type = ExponentialLR
    decay_rate = 0.99995
    learning_rate_low = 7e-6

    train_num_rays = 256
    max_train_num_rays = 4096
    dynamic_ray_sampling = true
    validate_resolution_level = 4
    warm_up_end = 2000
    anneal_end = 40000
    use_white_bkgd = false

    save_freq = 10000000
    val_freq = 5000
    val_mesh_freq = 2500
    report_freq = 100

    color_weight = 1.0
    igr_weight = 0.1
    mask_weight = 0.1

    randomized = true,
    grid_prune = true,
    occ_thre = 0.01,
    resolution_occ_grid = 128,
    num_samples_per_ray = 256,
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=true

        use_feature_grid = false,
        interpolation_type = trilinear
        base_lod = 1
        num_lods = 19
        feature_dim = 2
        feature_std = 0.0001
        max_grid_res = 2048
        codebook_bitwidth = 19
    }

    sdf_network {
        geo_feat_dim=64,
        d_in = 3,
        n_layers = 4,
        d_hidden = 128,
        include_xyz = true,
        n_frequencies = 6,

        base_lod = 19,
        num_lods = 19,
        feature_dim = 2,
        feature_std = 0.001,
        codebook_bitwidth = 19,
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_in = 9,
        d_out = 3,
        d_hidden = 64,
        geo_feat_dim = 64,
        n_layers = 2,
        multires_view = 4,
        squeeze_out = True,

        use_feature_grid = false,
        base_lod = 1,
        num_lods = 5,
        feature_dim = 2,
        feature_std = 0.0001,
        max_grid_res = 512,
        codebook_bitwidth = 12,
   }

    neus_renderer {
        n_samples = 64,
        n_importance = 64,
        n_outside = 0,
        up_sample_steps = 4,     # 1 for simple coarse-to-fine sampling
        perturb = 1.0,
    }
}
